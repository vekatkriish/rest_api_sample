pipeline {

	agent any
	
    /*agent {
	
        dockerfile {
            args '-v $HOME/.m2:/root/.m2'
        }
    }*/
    
    stages {
	    
        stage('build') {
            steps {
               git url: 'https://github.com/vekatkriish/rest_api_sample'
                sh "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar \
                   -Dsonar.host.url=https://sonarcloud.io \
                   -Dsonar.organization=vekatkriish-github \
                   -Dsonar.login=84816e5309f5ffa147dd0b44ca09278511c90749"
                sh "cd target && ls -al"
		    }
        }

        /* stage('build') {
            steps {
               git url: 'https://github.com/vekatkriish/javaenv.git'
                sh "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar \
                   -Dsonar.host.url=https://sonarcloud.io \
                   -Dsonar.organization=vekatkriish-github \
                   -Dsonar.login=2a09b4d0059d6fa5ccb060e560199c80deb7b68a"
                sh "cd target && ls -al"
		    }
        } */
		
		stage('upload to artifactory') {
            steps {
               script{
               	  def server = Artifactory.server 'jfrogLocal'
               	  def uploadSpec = """{
					 "files": [
					  {
					      "pattern": "target/*.jar",
					      "target": "libs-snapshot/"
					    }
					 ]
				   }"""
				   server.upload(uploadSpec)
               }
		    }
        }
	
        stage ('Starting ART job') {
            steps{
                build job: 'deploy', 
                parameters: [ 
                string(name: 'build_no', value: env.BUILD_NUMBER),
                    string(name: 'env', value: "dev"),
                    [$class: 'BooleanParameterValue', name: 'skiptests', value: false]
                
                ]
            }
        }
        
    }
}